import*as e from"three";import{InteractionManager as t}from"three.interactive";import*as s from"three-stdlib";import{OrbitControls as i}from"three-stdlib";import o from"mitt";import*as n from"cannon-es";import r from"stats.js";import{getScreenFov as a,MakuGroup as c,Maku as h,Scroller as d}from"maku.js";import{ParametricGeometry as l}from"three/examples/jsm/geometries/ParametricGeometry.js";import u from"gsap";import m from"imagesloaded";class p{base;tasks;constructor(e){this.base=e,this.tasks=[]}add(e){this.tasks.push(e)}update(){this.base.renderer.setAnimationLoop((e=>{this.tasks.forEach((t=>{t(e)})),this.base.composer?this.base.composer.render():this.base.renderer.render(this.base.scene,this.base.camera)}))}}class w{base;constructor(e){this.base=e,this.base.update((e=>this.update(e)))}addExisting(){}update(e){}}class v extends w{config;emitter;resourceList;items;toLoad;loaded;loaders;constructor(e,t,s={}){super(e);const{useDracoLoader:i=!1,dracoDecoderPath:n="https://www.gstatic.com/draco/versioned/decoders/1.4.3/"}=s;this.config={useDracoLoader:i,dracoDecoderPath:n};const r=o();this.emitter=r,this.resourceList=t,this.items={},this.toLoad=t.length,this.loaded=0,this.loaders={},this.setLoaders(),i&&this.setDracoLoader(),this.startLoading()}setLoaders(){this.loaders.gltfLoader=new s.GLTFLoader,this.loaders.textureLoader=new e.TextureLoader,this.loaders.cubeTextureLoader=new e.CubeTextureLoader,this.loaders.fontLoader=new s.FontLoader,this.loaders.fbxLoader=new s.FBXLoader,this.loaders.audioLoader=new e.AudioLoader,this.loaders.objLoader=new s.OBJLoader,this.loaders.hdrTextureLoader=new s.RGBELoader,this.loaders.svgLoader=new s.SVGLoader}setDracoLoader(){const e=new s.DRACOLoader;e.setDecoderPath(this.config.dracoDecoderPath),this.loaders.gltfLoader?.setDRACOLoader(e)}startLoading(){for(const e of this.resourceList)"gltfModel"===e.type?this.loaders.gltfLoader?.load(e.path,(t=>{this.resourceLoaded(e,t)})):"texture"===e.type?this.loaders.textureLoader?.load(e.path,(t=>{this.resourceLoaded(e,t)})):"cubeTexture"===e.type?this.loaders.cubeTextureLoader?.load(e.path,(t=>{this.resourceLoaded(e,t)})):"font"===e.type?this.loaders.fontLoader?.load(e.path,(t=>{this.resourceLoaded(e,t)})):"fbxModel"===e.type?this.loaders.fbxLoader?.load(e.path,(t=>{this.resourceLoaded(e,t)})):"audio"===e.type?this.loaders.audioLoader?.load(e.path,(t=>{this.resourceLoaded(e,t)})):"objModel"===e.type?this.loaders.objLoader?.load(e.path,(t=>{this.resourceLoaded(e,t)})):"hdrTexture"===e.type?this.loaders.hdrTextureLoader?.load(e.path,(t=>{this.resourceLoaded(e,t)})):"svg"===e.type&&this.loaders.svgLoader?.load(e.path,(t=>{this.resourceLoaded(e,t)}))}resourceLoaded(e,t){this.items[e.name]=t,this.loaded+=1,this.isLoaded&&this.emitter.emit("ready")}get loadProgress(){return this.loaded/this.toLoad}get isLoaded(){return this.loaded===this.toLoad}}class f extends w{clock;deltaTime;elapsedTime;constructor(t){super(t);const s=new e.Clock;this.clock=s,this.deltaTime=0,this.elapsedTime=0}update(e){const t=this.clock.getElapsedTime(),s=t-this.elapsedTime;this.deltaTime=s,this.elapsedTime=t}}class g extends w{mouse;constructor(t){super(t);const s=new e.Vector2(0,0);this.mouse=s}listenForMouse(){window.addEventListener("mousemove",(t=>{const s=new e.Vector2(t.clientX,window.innerHeight-t.clientY);this.mouse=s})),window.addEventListener("touchstart",(t=>{const s=new e.Vector2(t.touches[0].clientX,window.innerHeight-t.touches[0].clientY);this.mouse=s})),window.addEventListener("touchmove",(t=>{const s=new e.Vector2(t.touches[0].clientX,window.innerHeight-t.touches[0].clientY);this.mouse=s}))}}class y extends w{world;meshPhysicsObjects;constructor(e){super(e);const t=new n.World;t.gravity.set(0,-9.82,0),this.world=t,this.meshPhysicsObjects=[]}add({mesh:e,body:t,copyPosition:s=!0,copyQuaternion:i=!0}){const o=new x(e,t,s,i);this.base.physics.world.addBody(t),this.meshPhysicsObjects.push(o)}tick(){const e=this.world,t=this.base.clock.deltaTime;e.step(1/60,t,3)}sync(){this.meshPhysicsObjects.forEach((e=>{const{mesh:t,body:s,copyPosition:i,copyQuaternion:o}=e;i&&t.position.copy(s.position),o&&t.quaternion.copy(s.quaternion)}))}update(e){this.sync(),this.tick()}}class x{mesh;body;copyPosition;copyQuaternion;constructor(e,t,s=!0,i=!0){this.mesh=e,this.body=t,this.copyPosition=s,this.copyQuaternion=i}}class b extends w{constructor(e){super(e)}get aspect(){return window.innerWidth/window.innerHeight}resize(){const{base:t}=this;t.camera instanceof e.PerspectiveCamera&&(t.camera.aspect=this.aspect,t.camera.updateProjectionMatrix(),t.renderer.setSize(window.innerWidth,window.innerHeight),t.renderer.setPixelRatio(Math.min(2,window.devicePixelRatio)))}listenForResize(){window.addEventListener("resize",(()=>{this.resize()}))}}class M extends w{stats;constructor(e){super(e);const t=new r;this.stats=t,this.base.container.appendChild(this.stats.dom)}update(e){this.stats.update()}}class P{camera;scene;renderer;container;animator;interactionManager;composer;clock;iMouse;physics;resizer;constructor(s="#sketch"){const i=new e.PerspectiveCamera(70,window.innerWidth/window.innerHeight,.01,100);i.position.z=1,this.camera=i;const o=new e.Scene;this.scene=o;const n=new e.WebGLRenderer({antialias:!0,alpha:!0});n.setSize(window.innerWidth,window.innerHeight),n.setPixelRatio(Math.min(2,window.devicePixelRatio)),this.renderer=n;const r=document.querySelector(s);r?.appendChild(n.domElement),this.container=r;const a=new p(this);this.animator=a;const c=new t(this.renderer,this.camera,this.renderer.domElement,!1);this.interactionManager=c,this.composer=null;const h=new f(this);this.clock=h;const d=new g(this);this.iMouse=d;const l=new y(this);this.physics=l;const u=new b(this);this.resizer=u,this.init(),this.addEventListeners()}addEventListeners(){this.resizer.listenForResize(),this.iMouse.listenForMouse()}update(e){this.animator.add(e)}init(){this.update((()=>{this.interactionManager.update()})),this.animator.update()}}class L extends w{camera;constructor(t,s={}){super(t);const{position:i=new e.Vector3(0,0,600),near:o=100,far:n=2e3}=s,r=a(i.z),c=t.container,h=c.clientWidth/c.clientHeight,d=new e.PerspectiveCamera(r,h,o,n);d.position.copy(i),this.camera=d}addExisting(){this.base.camera=this.camera,this.base.interactionManager.camera=this.camera}}class T extends w{controls;constructor(e){super(e);const t=new i(e.camera,e.renderer.domElement);this.controls=t,t.enableDamping=!0}update(e){this.controls.update()}}const C=(e,t,s)=>{e=2*Math.PI*(e-.5),t=2*Math.PI*(t-.5);const i=1+Math.cosh(e)*Math.cosh(t),o=Math.sinh(t)*Math.cos(5*e)/i,n=Math.sinh(t)*Math.sin(5*e)/i,r=Math.cosh(t)*Math.sinh(e)/i;s.set(o,r,n)},S=(e,t,s)=>{const i=.6,o=2*e*Math.PI,n=2*t*Math.PI,r=Math.cos(o)*Math.cos(n),a=Math.cos(o)*Math.sin(n),c=Math.sin(o),h=1*r/Math.sqrt(1-i*a**2-i*c**2),d=1*a/Math.sqrt(1-i*r**2-i*c**2),l=1*c/Math.sqrt(1-i*Math.cos(o)**2);s.set(d,l,h)};class V extends l{constructor(e,t){super(C,e,t)}}class D extends l{constructor(e,t){super(S,e,t)}}class k extends e.MeshPhysicalMaterial{constructor(t){super({roughness:.6,transmission:1,thickness:1.2,clearcoat:1,clearcoatRoughness:.1,clearcoatNormalScale:new e.Vector2(.3,.3),...t})}}class E extends w{material;mesh;emitter;infospots;isInfospotVisible;active;constructor(t,s={}){super(t);const{radius:i=5e3}=s,n=new e.SphereGeometry(i,60,40),r=new e.MeshBasicMaterial({side:e.BackSide,transparent:!0,opacity:1});this.material=r;const a=new e.Mesh(n,r);this.mesh=a,this.emitter=o(),this.infospots=[],this.isInfospotVisible=!1,this.active=!1}addExisting(){const{base:e,mesh:t}=this,{scene:s}=e;s.add(t)}outputPosition(){window.addEventListener("click",(e=>{const t=this.base.interactionManager.raycaster.intersectObject(this.mesh,!0)[0].point.clone(),s=`${t.x.toFixed(2)}, ${t.y.toFixed(2)}, ${t.z.toFixed(2)}`;console.log(s),this.emitter.emit("click",t)}))}show(){this.material.opacity=1}hide(){this.material.opacity=0}fadeIn(e=.5){return new Promise((t=>{u.fromTo(this.material,{opacity:0},{opacity:1,duration:e,onComplete(){t(!0)}})}))}fadeOut(e=.5){return new Promise((t=>{u.fromTo(this.material,{opacity:1},{opacity:0,duration:e,onComplete(){t(!0)}})}))}add(e){this.infospots.push(e)}addGroup(e){for(const t of e)this.add(t)}update(e){for(const e of this.infospots)this.active&&this.isInfospotVisible?e.makeVisible():e.makeInvisible()}toggleInfospotVisibility(e){const t=e||!this.isInfospotVisible;this.isInfospotVisible=t}onEnter(e=.5){this.active=!0,this.toggleInfospotVisibility(!0),this.fadeIn(e)}onLeave(e=.5){this.active=!1,this.toggleInfospotVisibility(!1),this.fadeOut(e)}}class R extends E{constructor(t,s,i={}){super(t);const{radius:o=5e3}=i,n=new e.SphereGeometry(o,60,40),r=new e.MeshBasicMaterial({map:s,side:e.BackSide,transparent:!0,opacity:1});this.material=r;const a=new e.Mesh(n,r);this.mesh=a}}class G extends w{camera;orbitControls;panoramas;currentPanorama;constructor(t,s={}){super(t);const{fov:i=60}=s,o=new e.PerspectiveCamera(i,window.innerWidth/window.innerHeight,1,1e4);o.position.set(0,0,1),t.camera=o,t.interactionManager.camera=o,this.camera=o;const n=new T(t);this.orbitControls=n,this.panoramas=[],this.currentPanorama=null}add(e){e.addExisting(),this.panoramas.push(e),e.onEnter(0),this.currentPanorama=e}setPanorama(e,t=.5){e!==this.currentPanorama&&(this.currentPanorama?.onLeave(t),e?.onEnter(t),this.currentPanorama=e)}}const I="\nuniform float iTime;\nuniform vec2 iResolution;\nuniform vec2 iMouse;\n\nvarying vec2 vUv;\n\nvoid main(){\n    vec3 p=position;\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(p,1.);\n    \n    vUv=uv;\n}\n",B="\nuniform float iTime;\nuniform vec2 iResolution;\nuniform vec2 iMouse;\n\nuniform sampler2D tDiffuse;\n\nvarying vec2 vUv;\n\nvoid main(){\n    vec2 p=vUv;\n    vec4 color=texture(tDiffuse,p);\n    gl_FragColor=color;\n}\n";class z extends w{composer;customPass;constructor(t,i={}){super(t);const{vertexShader:o=I,fragmentShader:n=B,uniforms:r={}}=i,a=new s.EffectComposer(t.renderer);this.composer=a;const c=new s.RenderPass(t.scene,t.camera);a.addPass(c);const h=new s.ShaderPass({vertexShader:o,fragmentShader:n,uniforms:{tDiffuse:{value:null},iTime:{value:0},iResolution:{value:new e.Vector2(window.innerWidth,window.innerHeight)},iMouse:{value:new e.Vector2(0,0)},...r}});this.customPass=h,h.renderToScreen=!0,a.addPass(h)}addExisting(){this.base.composer=this.composer}update(t){const s=this.customPass.uniforms;s.iTime.value=t/1e3,s.iResolution.value=new e.Vector2(window.innerWidth,window.innerHeight),s.iMouse.value=this.base.interactionManager.mouse}}class F extends w{mesh;constructor(t,s={}){super(t);const{width:i=.2,height:o=.2,depth:n=.2,position:r=new e.Vector3(0,0,0),material:a=new e.MeshBasicMaterial({color:new e.Color("#ffffff")})}=s,c=new e.BoxGeometry(i,o,n),h=new e.Mesh(c,a);h.position.copy(r),this.mesh=h}addExisting(){this.base.scene.add(this.mesh)}spin(e,t="y",s=1){this.mesh.rotation[t]=e/1e3*s}}const j="\nvarying vec2 vUv;\n\nvoid main(){\n    vec3 p=position;\n    gl_Position=vec4(p,1.);\n    \n    vUv=uv;\n}\n",H="\nuniform float iTime;\nuniform vec3 iResolution;\nuniform vec4 iMouse;\n\nvarying vec2 vUv;\n\nvoid main(){\n    vec2 p=vUv;\n    vec3 color=vec3(p,0.);\n    gl_FragColor=vec4(color,1.);\n}\n";class N extends w{material;mesh;constructor(t,s={}){super(t);const{vertexShader:i=j,fragmentShader:o=H,uniforms:n={},shadertoyMode:r=!1}=s,a=r?`\n    \nuniform float iGlobalTime;\nuniform float iTime;\nuniform float iTimeDelta;\nuniform vec3 iResolution;\nuniform vec4 iMouse;\nuniform int iFrame;\nuniform vec4 iDate;\nuniform float iSampleRate;\n\nuniform sampler2D iChannel0;\nuniform sampler2D iChannel1;\nuniform sampler2D iChannel2;\nuniform sampler2D iChannel3;\n\nuniform float iChannelTime[4];\n\n\n    ${o}\n\n    \nvarying vec2 vUv;\n\nvoid main(){\n    mainImage(gl_FragColor,vUv*iResolution.xy);\n}\n\n    `:o,c=new e.PlaneGeometry(2,2),h=new e.ShaderMaterial({vertexShader:i,fragmentShader:a,uniforms:{iGlobalTime:{value:0},iTime:{value:0},iTimeDelta:{value:0},iResolution:{value:new e.Vector3(window.innerWidth,window.innerHeight,1)},iMouse:{value:new e.Vector4(0,0,0,0)},iFrame:{value:0},iDate:{value:new e.Vector4((new Date).getFullYear(),(new Date).getMonth()+1,(new Date).getDate(),(new Date).getHours())},iSampleRate:{value:44100},iChannelTime:{value:[0,0,0,0]},...n},side:e.DoubleSide});this.material=h;const d=new e.Mesh(c,h);this.mesh=d}addExisting(){this.base.scene.add(this.mesh)}update(t){const s=this.material.uniforms,i=this.base.clock.elapsedTime;s.iGlobalTime.value=i,s.iTime.value=i;const o=this.base.clock.deltaTime;s.iTimeDelta.value=o,s.iResolution.value=new e.Vector3(window.innerWidth,window.innerHeight,1);const{x:n,y:r}=this.base.iMouse.mouse;s.iMouse.value=new e.Vector4(n,r,0,0),s.iDate.value=new e.Vector4((new Date).getFullYear(),(new Date).getMonth()+1,(new Date).getDate(),(new Date).getHours()),s.iChannelTime.value=[i,i,i,i]}}const W=t=>{switch(t.type){case"BoxGeometry":case"BoxBufferGeometry":{const{width:e=1,height:s=1,depth:i=1}=t.parameters,o=new n.Vec3(e/2,s/2,i/2);return new n.Box(o)}case"PlaneGeometry":case"PlaneBufferGeometry":return new n.Plane;case"SphereGeometry":case"SphereBufferGeometry":{const{radius:e}=t.parameters;return new n.Sphere(e)}case"CylinderGeometry":case"CylinderBufferGeometry":{const{radiusTop:e,radiusBottom:s,height:i,radialSegments:o}=t.parameters;return new n.Cylinder(e,s,i,o)}default:{let i=new e.BufferGeometry;i.setAttribute("position",t.getAttribute("position")),i=s.mergeVertices(i);const o=i.attributes.position.array,r=i.index.array,a=[];for(let e=0;e<o.length;e+=3)a.push(new n.Vec3(o[e],o[e+1],o[e+2]));const c=[];for(let e=0;e<r.length;e+=3)c.push([r[e],r[e+1],r[e+2]]);return new n.ConvexPolyhedron({vertices:a,faces:c})}}},U=(e="div")=>new Promise((t=>{m(e,{background:!0},t)})),O=(e=100,t,s=3)=>Float32Array.from({length:e*s},((e,s)=>t(s))),A=(e,t,s,i=3)=>{for(let o=0;o<t;o++){const t=o*i;s(e,{x:t,y:t+1,z:t+2,w:t+3},o)}},q=(t,s=3)=>{const i={2:new e.Vector2,3:new e.Vector3,4:new e.Vector4};return Array.from({length:t.array.length/s},((e,o)=>i[s].clone().fromBufferAttribute(t,o)))},$=t=>{t.physicallyCorrectLights=!0,t.outputEncoding=e.sRGBEncoding,t.toneMapping=e.ReinhardToneMapping,t.toneMappingExposure=3,t.shadowMap.enabled=!0,t.shadowMap.type=e.PCFSoftShadowMap},_=(t,s)=>{const i=t.clone();i.project(s);const o=window.innerWidth/2,n=window.innerHeight/2,r=i.x*o+o,a=-i.y*n+n;return new e.Vector2(r,a)},Y=(t,s)=>{const i=t.clone().sub(s.position),o=s.getWorldDirection(new e.Vector3);return i.angleTo(o)>Math.PI/2},Q=(e,t,s,i)=>{const o=e.clone();o.project(t),s.setFromCamera(o,t);const n=s.intersectObjects(i,!0);if(n.length){const t=n[0].distance;return e.distanceTo(s.ray.origin)<t}return!0},X=(t,s,i=[16777271,0])=>{if(s instanceof e.PerspectiveCamera||s instanceof e.OrthographicCamera){const e=s.position,o=t.distanceTo(e),n=(i[1]-i[0])/(s.far-s.near),r=i[1]-n*s.far;return Math.round(n*o+r)}},Z="\nuniform float iTime;\nuniform vec2 iResolution;\nuniform vec2 iMouse;\n\nvarying vec2 vUv;\n\nvoid main(){\n    vec3 p=position;\n    gl_Position=projectionMatrix*modelViewMatrix*vec4(p,1.);\n    \n    vUv=uv;\n}\n",J="\nuniform float iTime;\nuniform vec2 iResolution;\nuniform vec2 iMouse;\n\nuniform sampler2D uTexture;\n\nvarying vec2 vUv;\n\nvoid main(){\n    vec4 tex=texture(uTexture,vUv);\n    vec3 color=tex.rgb;\n    gl_FragColor=vec4(color,1.);\n}\n";class K extends w{elList;vertexShader;fragmentShader;uniforms;makuMaterial;makuGroup;scroller;constructor(e,t={}){super(e);const{elList:s=[...document.querySelectorAll("img")],vertexShader:i=Z,fragmentShader:o=J,uniforms:n={}}=t;this.elList=s,this.vertexShader=i,this.fragmentShader=o,this.uniforms=n,this.makuMaterial=null,this.makuGroup=null,this.scroller=null}async addExisting(){await U();const t=new e.ShaderMaterial({vertexShader:this.vertexShader,fragmentShader:this.fragmentShader,side:e.DoubleSide,uniforms:{uTexture:{value:null},iTime:{value:0},iResolution:{value:new e.Vector2(window.innerWidth,window.innerHeight)},iMouse:{value:new e.Vector2(0,0)},...this.uniforms}});this.makuMaterial=t;const s=new c;this.makuGroup=s;const i=this.elList.map((e=>new h(e,t,this.base.scene)));s.addMultiple(i),s.setPositions();const o=new d;this.scroller=o,o.listenForScroll()}update(t){const s=this.makuGroup,i=this.scroller;i?.syncScroll(),s?.setPositions(i?.scroll.current),s?.makus.forEach((s=>{const i=s.mesh.material.uniforms;i.iTime.value=t/1e3,i.iResolution.value=new e.Vector2(window.innerWidth,window.innerHeight),i.iMouse.value=this.base.interactionManager.mouse}))}}class ee extends w{el;position;visibleClassName;xPropertyName;yPropertyName;zIndexPropertyName;raycaster;occlude;visibleToggle;constructor(t,s,i=new e.Vector3(0,0,0),o={}){super(t),this.el=s,this.position=i;const{visibleClassName:n="visible",xPropertyName:r="--x",yPropertyName:a="--y",zIndexPropertyName:c="--z-index",occlude:h=[]}=o;this.visibleClassName=n,this.xPropertyName=r,this.yPropertyName=a,this.zIndexPropertyName=c,this.raycaster=new e.Raycaster,this.occlude=h,this.visibleToggle=!0}get domPosition(){return _(this.position,this.base.camera)}get zIndex(){return X(this.position,this.base.camera)}get isBehindCamera(){return Y(this.position,this.base.camera)}get isVisible(){return Q(this.position,this.base.camera,this.raycaster,this.occlude)}get visible(){return!!this.visibleToggle&&(0===this.occlude.length?!this.isBehindCamera:!this.isBehindCamera&&this.isVisible)}show(){this.el?.classList.add(this.visibleClassName)}hide(){this.el?.classList.remove(this.visibleClassName)}translate({x:e=0,y:t=0}){this.el?.style.setProperty(this.xPropertyName,`${e}px`),this.el?.style.setProperty(this.yPropertyName,`${t}px`)}setZIndex(e=0){this.el?.style.setProperty(this.zIndexPropertyName,`${e}`)}syncPosition(){this.translate(this.domPosition),this.zIndex&&this.setZIndex(this.zIndex)}makeVisible(){this.visibleToggle=!0}makeInvisible(){this.visibleToggle=!1}update(e){this.syncPosition(),this.visible?this.show():this.hide()}}export{p as Animator,v as AssetManager,P as Base,E as BasicPanorama,F as Box,f as Clock,w as Component,z as CustomEffect,K as Gallery,k as GlassMaterial,ee as Html,V as HyperbolicHelicoidGeometry,g as IMouse,R as ImagePanorama,x as MeshPhysicsObject,T as OrbitControls,y as Physics,b as Resizer,L as ScreenCamera,N as ScreenQuad,D as SphubeGeometry,M as Stats,G as Viewer,_ as calcObjectPosition,q as convertBufferAttributeToVector,W as convertGeometryToShape,$ as enableRealisticRender,C as hyperbolicHelicoidFunction,Y as isObjectBehindCamera,Q as isObjectVisible,A as iterateBuffer,O as makeBuffer,X as objectZIndex,U as preloadImages,S as sphubeFunction};
